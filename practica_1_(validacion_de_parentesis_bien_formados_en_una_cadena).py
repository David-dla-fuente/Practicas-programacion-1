# -*- coding: utf-8 -*-
"""Practica 1 (validacion de parentesis bien formados en una cadena).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ARj1JBVbMViMu4mT7ghoutWdOQwXHzn_
"""

# Practica 1 (validacion de parentesis bien formados en una cadena)
# Problema: Determinar si una cadena dada, consiste en parentesis bien formados
# Creado por: De La Fuente.P Ruben David - 424148577
# Nombre_usuario_Gitgub: David-dla-fuente

# ARGUMENTOS:
pila = [] # lista vacia
caracteres = {')':'('}


# Definimos:
def verificar_parentesis(S):
 ''' Verifica si una cadena(s) dada, consiste en parentesis bien formados'''
 for i in S:
  if i in '(':
   pila.append(i) # si se encuenrtra "(" lo agregamos a la pila
  elif i in ')':
   if not pila or pila[-1]  != caracteres[i]:
    # si se encuentra ")", vereficamos si la pila esta vacia,  o vemos si el ultimo elemento de la pila de la misma forma que ")"
    print('Hay un parentesis de cierre sin un correspondiente de apertura.')
    return False
   pila.pop()
   # si no se cumplen los casos anteriores, se empareja ")" con el elemento de la forma "(" y se eliminan de la pila
 if not pila:
  print('Sus parentesis estan bien definidos')
  return True
 else:
 # la pila no emparejo todos los elementos "(" con algun elemento ")"
  print('Hay un parentesis de apertura sin un correspondiente de cierre.')
  return False
# fin de la definicion


# Definimos:
def main(S):
  '''Imprime S dada, evaluada en la funcion verificar_parentesis'''
  print(verificar_parentesis(S))
# fin de la definicion


if __name__ == "__main__":
  S1 = ("()")
  S2 = ("(()))")
  main(S1)
  main(S2)

